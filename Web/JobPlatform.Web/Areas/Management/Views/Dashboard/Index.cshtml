@model JobPlatform.Web.ViewModels.Management.Dashboard.IndexViewModel
@inject JobPlatform.Services.ISlugService SlugService
@{
    this.ViewData["Title"] = $"{Model.Name} Dashboard";
}

<div>
    <div class="row">
        <div class="col-md-2">
            <partial name="_ManageNav" />
        </div>
        <div class="col-md-9">
            <h1>@this.ViewData["Title"]</h1>
            <div class="col-md-4">
                <div class="card col-md-12">
                    <div class="card-body text-center">
                        <i class="far fa-file-alt fa-5x"></i>
                        <p class="card-text">Active job posts: @Model.ActiveJobs</p>
                    </div>
                </div>
                <br />
                <a class="btn btn-primary" asp-area="" asp-controller="Job" asp-action="Create">Create new job post</a>
            </div>
            
            <hr />
            <div class="container">
                <div class="row">
                    @foreach (var job in Model.JobPosts)
                    {
                        <div class="col-md-4">
                            <div class="card col-md-12 m-2">
                                <div class="card-body text-center">
                                    <div class="text-body">
                                        <a asp-area="" asp-controller="Job" asp-action="Id" asp-route-id="@job.Id" asp-route-slug="@SlugService.ConvertSlug(@job.Title)">
                                            <h6 class="job-card_title text-overflow__ellipsis">@job.Title</h6>
                                        </a>
                                        <h7 class="job-card_location">@job.City, @job.Country</h7>
                                        <p class="job-card_listed-status"><time datetime="@job.CreatedOn.ToString("o")"></time></p>
                                        <div class="btn-group btn-block">
                                            <a asp-area="Management" asp-controller="Dashboard" asp-action="MessagesByPost" asp-route-postId="@job.Id" class="btn btn-outline-secondary">
                                                <i class="fas fa-envelope">
                                                    <span>@job.ApplyCounter</span>
                                                </i>
                                            </a>
                                            <a asp-area="" asp-controller="Job" asp-action="Edit" asp-route-id="@job.Id" class="btn btn-outline-secondary">
                                                <i class="fas fa-edit"></i>
                                            </a>
                                            <button type="button" class="btn btn-outline-danger" data-toggle="modal" data-target="#dialogBox" data-jobtitle="@job.Title" data-jobid="@job.Id">
                                                <i class="fa fa-times"></i>
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>

            @if (this.Model.PagesCount > 1)
            {
                <nav>
                    <ul class="pagination justify-content-center">
                        @if (this.Model.CurrentPage != 1)
                        {
                            <li class="page-item">
                                <a class="page-link" asp-area="Management" asp-controller="Dashboard" asp-action="Jobs" asp-route-page="@(this.Model.CurrentPage - 1)" aria-label="Previous">
                                    <span aria-hidden="true">&laquo;</span>
                                    <span class="sr-only">Previous</span>
                                </a>
                            </li>
                        }

                        @for (int i = 1; i <= Model.PagesCount; i++)
                        {
                            string active = i == this.Model.CurrentPage ? "active" : string.Empty;
                            <li class="page-item @active">
                                <a class="page-link" asp-area="Management" asp-controller="Dashboard" asp-action="Jobs" asp-route-page="@i">@i</a>
                            </li>
                        }

                        @if (this.Model.CurrentPage != Model.PagesCount)
                        {
                            <li class="page-item">
                                <a class="page-link" asp-area="Management" asp-controller="Dashboard" asp-action="Jobs" asp-route-page="@(this.Model.CurrentPage + 1)" aria-label="Next">
                                    <span aria-hidden="true">&raquo;</span>
                                    <span class="sr-only">Next</span>
                                </a>
                            </li>
                        }
                    </ul>
                </nav>
            }

            <div class="modal fade" id="dialogBox" tabindex="-1" role="dialog" aria-labelledby="dialogBoxTitle" aria-hidden="true">
                <div class="modal-dialog modal-dialog-centered" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h7 class="modal-title" id="dialogBoxLongTitle">Are you sure to delete this post?</h7>
                            <button type="button" class="close" data-dismiss="modal" aria-label="Cancel">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                        <div class="modal-body">
                            <h5 class="text-danger job-title">""</h5>
                            <form asp-area="" asp-controller="Job" asp-action="Delete" asp-route-id="" class="dialogForm">
                                <button type="button" class="btn btn-secondary align-left" data-dismiss="modal">Cancel</button>
                                <button type="submit" class="btn btn-danger">Delete</button>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts{
    <script>
        $('#dialogBox').on('show.bs.modal', function (event) {
            var button = $(event.relatedTarget) // Button that triggered the modal
            var jobTitle = button.data('jobtitle') // Extract info from data-* attributes
            var postId = button.data('jobid') // Extract info from data-* attributes
            // If necessary, you could initiate an AJAX request here (and then do the updating in a callback).
            // Update the modal's content. We'll use jQuery here, but you could use a data binding library or other methods instead.
            var modal = $(this)
            modal.find('.job-title').text(jobTitle)
            modal.find('.dialogForm').attr("action", "/Job/Delete/" + postId)
        })
    </script>
}


